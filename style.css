:root{
    --branco-principal: #ffffff;
    --cinza-secundario: #c0c0c0;
    --botao-azul: #167bf7;
    --cor-de-fundo: #00030c;
    --fonte-principal: 'Inter';
    --botao-azul-efeito: #3c92fa;
}

body{
    color: var(--branco-principal);
    background-color: var(--cor-de-fundo); /*Essa estrutura de var funciona como uma função CSS.*/
    font-family: var(--fonte-principal);
    font-size: 16px;
    font-weight: 400;;
}

*{
    margin: 0;
    padding: 0;
}

.principal{
    background-image: url("img/Background.png");
    background-repeat: no-repeat; /*A imagem de fundo não se repete por maior que seja a tela onde o projeto está sendo aberto*/
    background-size: contain; /*O tamanho da imagem de fundo vai ser todo o tamanho do container que no nosso caso é a Section*/
    align-items: center;
    text-align: center; /*essa propriedade não alinha ao centro somente textos, mas tudo que está dentro do elemento section*/
}


.container {
    height: 100vh;
    display: grid; /*esse tipo de display, por padrão separa em linhas cada elemento da página.*/
    grid-template-columns: 50% 50%;
}

.container__botao{
    background-color: var(--botao-azul); /*Traz o azul para cor de fundo do link*/
    border-radius: 5px; /*Torna a cor de fundo com borda arredondada*/
    padding: 1em; /*Deixa um espaço entre o escrito e o fim da borda. "em" é o tamanho da fonte. Se a fonte for tamanho 16, o padding também será.*/
    color: var(--branco-principal);

    /*Antes de configurar o display, o botão estaria ao lado da imagem porque por padrão, o botão e a imagem possuem display in line que é um do lado do outro
    ocupando o espaço do contrainer. Deixando o display bloqueado, ele vai passar a ter o tamanho cheio da tela. */
    display: block;
    text-decoration: none;  /*retirando o sublinhado do link*/
    margin-bottom: 1em; /*espaço entre os dois botões e entre o botão de baixo e a observação*/
}

.botao_secundario{
    background-color: transparent;
    border: 2px solid var(--branco-principal);
} 

.container__aviso{
    font-size: 12px;
    color: var(--cinza-secundario);
}

.container__titulo{
    font-size: 28px;
    font-weight: 700;
}

.container__imagem{
    margin: 1em 0 2em 0; /*como no relógio, primeiro às 12h, segundo às 3h, terceiro às 6h, quarto às 9h.*/
}

.container__caixa{
    margin: 0 6em; /*topo, baixo*/
}

.secundario__imagem{
    width: 80%;
}

.secundario{
    align-items: center;
    margin: 0 10em;
}

.descricao__titulo{
    font-weight: 700;
    font-size: 48px;
    color: white;
    margin-bottom: 0.1em;
}

.descricao__texto{
    color: var(--cinza-secundario);
}

.secundario__botao{
    display: inline-block;
    margin-top: 1em;
}

.container__descricao{
    padding: 2em; /*espaço entre o texto de descrição e imagem*/
}
.dispositivos__lista{
    display: flex;
    justify-content: center;
    list-style-type: none;
    margin: 5em 0;
}

.dispositivos{
    text-align: center;
}

.dispositivos__titulo{
    font-size: 48px;
    color: var(--branco-principal);
}

.lista__item{
    font-size: 32px;
    color: var(--branco-principal);
}

.rodape__logo{

}
.rodape__lista{
    display: flex;
    justify-content: center;
    list-style-type: none;
    margin-top: 1em;
}

.lista__link a{
    text-decoration: none;
    color: var(--branco-principal);
    margin-left: 1em;
}

.lista__link a:hover{ /*Hover, active, focus, visited entre outras... são pseudoclasses, que quando adicionadas ao final dos seletores para trazer o estado do elemento*/
    color: var(--botao-azul);
}

.lista__link a:active{
    color: purple;
}

.rodape__texto {
    margin: 1em 0;
    color: var(--cinza-secundario);
    font-size: 14px;
}

.rodape {
    text-align: center;
    margin: 5em 3em;
}

.container__botao:hover{
    background-color: var(--botao-azul-efeito);
    color: var(--cor-de-fundo);
}
